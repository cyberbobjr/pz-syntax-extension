{
  "scopeName": "source.pz-script",
  "patterns": [
    {
      "name": "entity.name.recipe.pz",
      "match": "(\\bcraftRecipe\\b)\\s+([\\w\\s]+?)(?=\\s*{)",
      "captures": {
        "1": {
          "name": "keyword.control"
        },
        "2": {
          "name": "entity.name.class"
        }
      }
    },
    {
      "name": "entity.name.item.pz",
      "match": "(\\bitem\\b)\\s+(\\w+)",
      "captures": {
        "1": {
          "name": "keyword.control"
        },
        "2": {
          "name": "entity.name.class"
        }
      }
    },
    {
      "name": "entity.name.fixing.pz",
      "match": "(\\bfixing\\b)\\s+([\\w\\s]+)",
      "captures": {
        "1": {
          "name": "keyword.control"
        },
        "2": {
          "name": "entity.name.class"
        }
      }
    },
    {
      "name": "keyword.module.pz",
      "match": "(\\bmodule\\b)\\s+(\\w+)",
      "captures": {
        "1": {
          "name": "keyword.control"
        },
        "2": {
          "name": "entity.name.namespace"
        }
      }
    },
    {
      "name": "support.type.property-name",
      "match": "\\bBase\\.[\\w.]+\\b"
    },
    {
      "name": "entity.name.class",
      "match": "\\b(inputs|outputs|component|itemMapper|Fluids)\\b"
    },
    {
      "name": "entity.name.property.pz",
      "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*[=:]",
      "captures": {
        "1": {
          "name": "constant.language"
        }
      }
    },
    {
      "name": "comment.block.pz",
      "begin": "/\\*",
      "end": "\\*/"
    },
    {
      "name": "comment.line.double-slash.pz",
      "match": "//.*$"
    },
    {
      "name": "constant.language.pz",
      "match": "\\b(TRUE|FALSE)\\b"
    },
    {
      "name": "string.quoted.double.pz",
      "begin": "\"",
      "end": "\""
    },
    {
      "name": "constant.numeric.pz",
      "match": "\\b\\d+(\\.\\d+)?\\b"
    }
  ]
}
